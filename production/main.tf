provider "aws" {
  region = var.region
}

# Export Terraform variable values to an Ansible var_file
resource "local_file" "tf_ansible_db_vars_file" {
  content  = <<-DOC
    # Ansible vars_file containing variable DB values from Terraform.
    # Generated by Terraform mgmt configuration.

    tf_db_host: ${aws_db_instance.odoo-db.address}
    tf_db_name: ${aws_db_instance.odoo-db.identifier}
    tf_db_user: ${aws_db_instance.odoo-db.username}
    tf_db_password: ${aws_db_instance.odoo-db.password}
    DOC
  filename = "./tf_ansible_vars_file.yml"
}

resource "aws_db_parameter_group" "odoo" {
  name   = "odoo"
  family = "postgres13"

  parameter {
    name  = "log_connections"
    value = "1"
  }
}

resource "aws_db_instance" "odoo-db" {
  identifier             = "odoodatabase"
  instance_class         = "db.t3.small"
  allocated_storage      = 60
  engine                 = "postgres"
  engine_version         = "13.4"
  username               = var.db_username
  password               = var.db_password
  db_subnet_group_name   = aws_db_subnet_group.odoo-db.name
  vpc_security_group_ids = [aws_security_group.rds.id]
  parameter_group_name   = aws_db_parameter_group.odoo.name
  publicly_accessible    = false
  skip_final_snapshot    = true
  multi_az               = true
}

resource "aws_instance" "odoo-app" {
  ami                  = var.odoo_ami
  instance_type        = "t3.small"
  key_name             = var.key_name
  iam_instance_profile = "ec2_s3_access"
  network_interface {
    network_interface_id = aws_network_interface.odoo_nic.id
    device_index         = 0
  }
  # monitoring = true
  provisioner "remote-exec" {
    inline = [
      "sudo apt-get update",
      "sudo apt-get install -y python3-pip git ansible",
      "git clone https://github.com/mejerome/s3-odoo-terraform.git",
      "ansible-playbook s3-odoo-terraform/playbook/bitnami_prep.yml",
    ]
  }
  connection {
    type        = "ssh"
    user        = "bitnami"
    private_key = file(var.key_file)
    host        = self.public_ip
  }

  provisioner "local-exec" {
    command = "sleep 120; ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -u bitnami --private-key ${var.key_file} -i '${self.public_ip},' ./dbcred.yml"
  }

  depends_on = [
    aws_db_instance.odoo-db,
  ]
  tags = {
    "Name" = var.tag_name
  }
}